; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\key.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\key.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\USER -I..\CORE -I..\STM32F10x_FWLib\inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\MALLOC -I..\FreeRTOS\include -I..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\HARDWARE\LED -I..\HARDWARE\TIMER -I..\HARDWARE\LCD -I..\HARDWARE\EXTI -I..\HARDWARE\KEY -I..\HARDWARE\BEEP -I..\LWIP\lwip-1.4.1\src\include -I..\LWIP\lwip-1.4.1\src\include\ipv4 -I..\LWIP\lwip-1.4.1\src\include\netif -I..\LWIP -I..\LWIP\arch -I..\LWIP\lwip_app\lwip_comm -I..\HARDWARE\DM9000 -I..\HARDWARE\SRAM -I..\LWIP\lwip-1.4.1\src\api -I.\RTE\_FreeRTOS -ID:\MDK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\MDK\ARM\CMSIS\Include -D__UVISION_VERSION=530 -DSTM32F10X_HD -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\key.crf ..\HARDWARE\KEY\key.c]
                          THUMB

                          AREA ||i.KEY_Init||, CODE, READONLY, ALIGN=2

                  KEY_Init PROC
;;;18     //按键初始化函数
;;;19     void KEY_Init(void) //IO初始化
000000  b508              PUSH     {r3,lr}
;;;20     { 
;;;21      	GPIO_InitTypeDef GPIO_InitStructure;
;;;22      
;;;23      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOE,ENABLE);//使能PORTA,PORTE时钟
000002  2101              MOVS     r1,#1
000004  2044              MOVS     r0,#0x44
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;24     
;;;25     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_2|GPIO_Pin_3|GPIO_Pin_4;//KEY0-KEY2
00000a  201c              MOVS     r0,#0x1c
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;26     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; //设置成上拉输入
000010  2048              MOVS     r0,#0x48
000012  f88d0003          STRB     r0,[sp,#3]
;;;27      	GPIO_Init(GPIOE, &GPIO_InitStructure);//初始化GPIOE2,3,4
000016  4669              MOV      r1,sp
000018  4806              LDR      r0,|L1.52|
00001a  f7fffffe          BL       GPIO_Init
;;;28     
;;;29     	//初始化 WK_UP-->GPIOA.0	  下拉输入
;;;30     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;
00001e  2001              MOVS     r0,#1
000020  f8ad0000          STRH     r0,[sp,#0]
;;;31     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; //PA0设置成输入，默认下拉	  
000024  2028              MOVS     r0,#0x28
000026  f88d0003          STRB     r0,[sp,#3]
;;;32     	GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA.0
00002a  4669              MOV      r1,sp
00002c  4802              LDR      r0,|L1.56|
00002e  f7fffffe          BL       GPIO_Init
;;;33     
;;;34     }
000032  bd08              POP      {r3,pc}
;;;35     //按键处理函数
                          ENDP

                  |L1.52|
                          DCD      0x40011800
                  |L1.56|
                          DCD      0x40010800

                          AREA ||i.KEY_Scan||, CODE, READONLY, ALIGN=2

                  KEY_Scan PROC
;;;43     //注意此函数有响应优先级,KEY0>KEY1>KEY2>KEY3!!
;;;44     u8 KEY_Scan(u8 mode)
000000  b510              PUSH     {r4,lr}
;;;45     {	 
000002  4604              MOV      r4,r0
;;;46     	static u8 key_up=1;//按键按松开标志
;;;47     	if(mode)key_up=1;  //支持连按		  
000004  b114              CBZ      r4,|L2.12|
000006  2001              MOVS     r0,#1
000008  492c              LDR      r1,|L2.188|
00000a  7008              STRB     r0,[r1,#0]
                  |L2.12|
;;;48     	if(key_up&&(KEY0==0||KEY1==0||KEY2==0||WK_UP==1))
00000c  482b              LDR      r0,|L2.188|
00000e  7800              LDRB     r0,[r0,#0]  ; key_up
000010  2800              CMP      r0,#0
000012  d037              BEQ      |L2.132|
000014  2110              MOVS     r1,#0x10
000016  482a              LDR      r0,|L2.192|
000018  f7fffffe          BL       GPIO_ReadInputDataBit
00001c  b178              CBZ      r0,|L2.62|
00001e  2108              MOVS     r1,#8
000020  4827              LDR      r0,|L2.192|
000022  f7fffffe          BL       GPIO_ReadInputDataBit
000026  b150              CBZ      r0,|L2.62|
000028  2104              MOVS     r1,#4
00002a  4825              LDR      r0,|L2.192|
00002c  f7fffffe          BL       GPIO_ReadInputDataBit
000030  b128              CBZ      r0,|L2.62|
000032  2101              MOVS     r1,#1
000034  4823              LDR      r0,|L2.196|
000036  f7fffffe          BL       GPIO_ReadInputDataBit
00003a  2801              CMP      r0,#1
00003c  d122              BNE      |L2.132|
                  |L2.62|
;;;49     	{
;;;50     		delay_ms(10);//去抖动 
00003e  200a              MOVS     r0,#0xa
000040  f7fffffe          BL       delay_ms
;;;51     		key_up=0;
000044  2000              MOVS     r0,#0
000046  491d              LDR      r1,|L2.188|
000048  7008              STRB     r0,[r1,#0]
;;;52     		if(KEY0==0)return KEY0_PRES;
00004a  2110              MOVS     r1,#0x10
00004c  481c              LDR      r0,|L2.192|
00004e  f7fffffe          BL       GPIO_ReadInputDataBit
000052  b908              CBNZ     r0,|L2.88|
000054  2001              MOVS     r0,#1
                  |L2.86|
;;;53     		else if(KEY1==0)return KEY1_PRES;
;;;54     		else if(KEY2==0)return KEY2_PRES;
;;;55     		else if(WK_UP==1)return WKUP_PRES;
;;;56     	}else if(KEY0==1&&KEY1==1&&KEY2==1&&WK_UP==0)key_up=1; 	    
;;;57      	return 0;// 无按键按下
;;;58     }
000056  bd10              POP      {r4,pc}
                  |L2.88|
000058  2108              MOVS     r1,#8                 ;53
00005a  4819              LDR      r0,|L2.192|
00005c  f7fffffe          BL       GPIO_ReadInputDataBit
000060  b908              CBNZ     r0,|L2.102|
000062  2002              MOVS     r0,#2                 ;53
000064  e7f7              B        |L2.86|
                  |L2.102|
000066  2104              MOVS     r1,#4                 ;54
000068  4815              LDR      r0,|L2.192|
00006a  f7fffffe          BL       GPIO_ReadInputDataBit
00006e  b908              CBNZ     r0,|L2.116|
000070  2003              MOVS     r0,#3                 ;54
000072  e7f0              B        |L2.86|
                  |L2.116|
000074  2101              MOVS     r1,#1                 ;55
000076  4813              LDR      r0,|L2.196|
000078  f7fffffe          BL       GPIO_ReadInputDataBit
00007c  2801              CMP      r0,#1                 ;55
00007e  d11b              BNE      |L2.184|
000080  2004              MOVS     r0,#4                 ;55
000082  e7e8              B        |L2.86|
                  |L2.132|
000084  2110              MOVS     r1,#0x10              ;56
000086  480e              LDR      r0,|L2.192|
000088  f7fffffe          BL       GPIO_ReadInputDataBit
00008c  2801              CMP      r0,#1                 ;56
00008e  d113              BNE      |L2.184|
000090  2108              MOVS     r1,#8                 ;56
000092  480b              LDR      r0,|L2.192|
000094  f7fffffe          BL       GPIO_ReadInputDataBit
000098  2801              CMP      r0,#1                 ;56
00009a  d10d              BNE      |L2.184|
00009c  2104              MOVS     r1,#4                 ;56
00009e  4808              LDR      r0,|L2.192|
0000a0  f7fffffe          BL       GPIO_ReadInputDataBit
0000a4  2801              CMP      r0,#1                 ;56
0000a6  d107              BNE      |L2.184|
0000a8  2101              MOVS     r1,#1                 ;56
0000aa  4806              LDR      r0,|L2.196|
0000ac  f7fffffe          BL       GPIO_ReadInputDataBit
0000b0  b910              CBNZ     r0,|L2.184|
0000b2  2001              MOVS     r0,#1                 ;56
0000b4  4901              LDR      r1,|L2.188|
0000b6  7008              STRB     r0,[r1,#0]            ;56
                  |L2.184|
0000b8  2000              MOVS     r0,#0                 ;57
0000ba  e7cc              B        |L2.86|
                          ENDP

                  |L2.188|
                          DCD      key_up
                  |L2.192|
                          DCD      0x40011800
                  |L2.196|
                          DCD      0x40010800

                          AREA ||.data||, DATA, ALIGN=0

                  key_up
000000  01                DCB      0x01
