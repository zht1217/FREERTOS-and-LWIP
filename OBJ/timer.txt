; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\timer.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\timer.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\USER -I..\CORE -I..\STM32F10x_FWLib\inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\MALLOC -I..\FreeRTOS\include -I..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\HARDWARE\LED -I..\HARDWARE\TIMER -I..\HARDWARE\LCD -I..\HARDWARE\EXTI -I..\HARDWARE\KEY -I..\HARDWARE\BEEP -I..\LWIP\lwip-1.4.1\src\include -I..\LWIP\lwip-1.4.1\src\include\ipv4 -I..\LWIP\lwip-1.4.1\src\include\netif -I..\LWIP -I..\LWIP\arch -I..\LWIP\lwip_app\lwip_comm -I..\HARDWARE\DM9000 -I..\HARDWARE\SRAM -I..\LWIP\lwip-1.4.1\src\api -I.\RTE\_FreeRTOS -ID:\MDK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\MDK\ARM\CMSIS\Include -D__UVISION_VERSION=530 -DSTM32F10X_HD -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\timer.crf ..\HARDWARE\TIMER\timer.c]
                          THUMB

                          AREA ||i.ConfigureTimeForRunTimeStats||, CODE, READONLY, ALIGN=2

                  ConfigureTimeForRunTimeStats PROC
;;;25     //初始化TIM3使其为FreeRTOS的时间统计提供时基
;;;26     void ConfigureTimeForRunTimeStats(void)
000000  b510              PUSH     {r4,lr}
;;;27     {
;;;28     	//定时器3初始化，定时器时钟为72M，分频系数为72-1，所以定时器3的频率
;;;29     	//为72M/72=1M，自动重装载为50-1，那么定时器周期就是50us
;;;30     	FreeRTOSRunTimeTicks=0;
000002  2100              MOVS     r1,#0
000004  4a03              LDR      r2,|L1.20|
000006  6011              STR      r1,[r2,#0]  ; FreeRTOSRunTimeTicks
000008  6051              STR      r1,[r2,#4]  ; FreeRTOSRunTimeTicks
;;;31     	TIM3_Int_Init(50-1,72-1);	//初始化TIM3
00000a  2147              MOVS     r1,#0x47
00000c  2031              MOVS     r0,#0x31
00000e  f7fffffe          BL       TIM3_Int_Init
;;;32     }
000012  bd10              POP      {r4,pc}
;;;33     
                          ENDP

                  |L1.20|
                          DCD      FreeRTOSRunTimeTicks

                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;65     //定时器3中断服务函数
;;;66     void TIM3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;67     {
;;;68     	if(TIM_GetITStatus(TIM3,TIM_IT_Update)==SET) //溢出中断
000002  2101              MOVS     r1,#1
000004  4809              LDR      r0,|L2.44|
000006  f7fffffe          BL       TIM_GetITStatus
00000a  2801              CMP      r0,#1
00000c  d108              BNE      |L2.32|
;;;69     	{
;;;70     		FreeRTOSRunTimeTicks++;
00000e  4808              LDR      r0,|L2.48|
000010  6802              LDR      r2,[r0,#0]  ; FreeRTOSRunTimeTicks
000012  6840              LDR      r0,[r0,#4]  ; FreeRTOSRunTimeTicks
000014  1c52              ADDS     r2,r2,#1
000016  f1400000          ADC      r0,r0,#0
00001a  4905              LDR      r1,|L2.48|
00001c  600a              STR      r2,[r1,#0]  ; FreeRTOSRunTimeTicks
00001e  6048              STR      r0,[r1,#4]  ; FreeRTOSRunTimeTicks
                  |L2.32|
;;;71     	}
;;;72     	TIM_ClearITPendingBit(TIM3,TIM_IT_Update);  //清除中断标志位
000020  2101              MOVS     r1,#1
000022  4802              LDR      r0,|L2.44|
000024  f7fffffe          BL       TIM_ClearITPendingBit
;;;73     }
000028  bd10              POP      {r4,pc}
;;;74     
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      0x40000400
                  |L2.48|
                          DCD      FreeRTOSRunTimeTicks

                          AREA ||i.TIM3_Int_Init||, CODE, READONLY, ALIGN=2

                  TIM3_Int_Init PROC
;;;38     //这里使用的是定时器3!
;;;39     void TIM3_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;40     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;41         TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;42     	NVIC_InitTypeDef NVIC_InitStructure;
;;;43     
;;;44     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); //时钟使能
000006  2101              MOVS     r1,#1
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;45     	
;;;46     	//定时器TIM3初始化
;;;47     	TIM_TimeBaseStructure.TIM_Period = arr; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值	
00000e  f8ad5008          STRH     r5,[sp,#8]
;;;48     	TIM_TimeBaseStructure.TIM_Prescaler =psc; //设置用来作为TIMx时钟频率除数的预分频值
000012  f8ad4004          STRH     r4,[sp,#4]
;;;49     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //设置时钟分割:TDTS = Tck_tim
000016  2000              MOVS     r0,#0
000018  f8ad000a          STRH     r0,[sp,#0xa]
;;;50     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //TIM向上计数模式
00001c  f8ad0006          STRH     r0,[sp,#6]
;;;51     	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure); //根据指定的参数初始化TIMx的时间基数单位
000020  a901              ADD      r1,sp,#4
000022  480e              LDR      r0,|L3.92|
000024  f7fffffe          BL       TIM_TimeBaseInit
;;;52      
;;;53     	TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE ); //使能指定的TIM3中断,允许更新中断
000028  2201              MOVS     r2,#1
00002a  4611              MOV      r1,r2
00002c  480b              LDR      r0,|L3.92|
00002e  f7fffffe          BL       TIM_ITConfig
;;;54     
;;;55     	//中断优先级NVIC设置
;;;56     	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  //TIM3中断
000032  201d              MOVS     r0,#0x1d
000034  f88d0000          STRB     r0,[sp,#0]
;;;57     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;  //先占优先级4级
000038  2001              MOVS     r0,#1
00003a  f88d0001          STRB     r0,[sp,#1]
;;;58     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;  //从优先级0级
00003e  2000              MOVS     r0,#0
000040  f88d0002          STRB     r0,[sp,#2]
;;;59     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ通道被使能
000044  2001              MOVS     r0,#1
000046  f88d0003          STRB     r0,[sp,#3]
;;;60     	NVIC_Init(&NVIC_InitStructure);  //初始化NVIC寄存器
00004a  4668              MOV      r0,sp
00004c  f7fffffe          BL       NVIC_Init
;;;61     
;;;62     	TIM_Cmd(TIM3, ENABLE);  //使能TIMx					 
000050  2101              MOVS     r1,#1
000052  4802              LDR      r0,|L3.92|
000054  f7fffffe          BL       TIM_Cmd
;;;63     }
000058  bd7f              POP      {r0-r6,pc}
;;;64     
                          ENDP

00005a  0000              DCW      0x0000
                  |L3.92|
                          DCD      0x40000400

                          AREA ||.data||, DATA, ALIGN=3

                  FreeRTOSRunTimeTicks
                          %        8
